package HomeWorks.hw_7;
/**7. Преобразование
 ТЕКСТ ЗАДАНИЯ
 Задание 1.
 (сдавать новым пулл реквестом в том же репозитории - вспоминаем:
 мержим прошлый ПР и удаляем старую ветку,
 в Идее переходим на ветку мастер и обновляем её,
 далее от неё создаём новую ветку с правильным названием,
 пишем код,
 коммитим и пушим изменения,
 создаём новый ПР, скидываем ссылку на него)

 1) К коду прошлой домашней работы добавить класс Scanner для считывания из консоли типа класса для создания нового объекта.
 Это может быть полное или сокращенное название класса, или даже цифра - главное,
 чтобы в зависимости от полученного значения переменная типа суперкласса инициализировалась объектом конкретного подкласса
 (через if else), и после этого передавалась в ваш метод visitServiceStation.

 2) Также в методе visitServiceStation произведите нисходящее преобразование полученного объекта, чтобы вызвать методы,
 специфичные для каждого подкласса (создайте по одному специфическому методу с разными названиями, отметьте их модификатором final).
 Не забывайте про проверку instanseOf, чтобы избежать ClassCastException).

 3) Определите, какие из ваших классов не наследуются, и сделайте их финальными с помощью модификатора final.

 Задание 2.

 Дворовый футбол.

 Для игры в футбол во дворе требуется 6 человек (3х3). Класс Игрок (англ. Player), содержит следующие поля:

 - поле “выносливость” (англ. stamina), разное для каждого экземпляра (т.е. не статическое)

 - константы “максимальная выносливость” (англ. MAX_STAMINA) со значением 100 и “минимальная выносливость”
 (англ. MIN_STAMINA) со значением 0, единые для всех экземпляров (т.е. статические)

 - статическое поле countPlayers, которое считает количество игроков на футбольном поле (изначально их 0, выходом на поле
 считается создание экземпляра класса, уходом - когда игрок устал).

 - геттер для поля “выносливость” и следующие методы:

 run() - Игрок бежит при вызове этого метода. Этот метод уменьшает выносливость на 1 при однократном вызове. Когда
 выносливость достигает 0, игроку нужен отдых и он уходит с поля.

 info() - выводит сообщение в зависимости от количества игроков на поле. Если игроков меньше 6, то выводит сообщение:
 “Команды неполные. На поле еще есть ... свободных мест”, иначе: “На поле нет свободных мест”. Грамматикой русского языка
 пренебречь, т.е. фраза “еще есть 1 свободных мест” допустима.

 Задание: создать класс Player по вышеописанному шаблону. Экземпляр класса при создании должен иметь значение выносливости
 от 90 до 100 (генерировать внутри конструктора). Создать 6 игроков, вызвать метод info(). При попытке создать 7,8 … n игрока,
 количество игроков на поле меняться не должно, проверить это.

 Примените к игроку метод run(), пока он полностью не выдохнется (отрицательное значение выносливости не допускается).
 Вывести количество игроков на поле.*/
public class Main {
    public static void main(String[] args) {




    }
}
